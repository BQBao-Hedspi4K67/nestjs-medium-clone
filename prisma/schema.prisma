generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int     @id @default(autoincrement())
  email    String  @unique
  username String  @unique
  password String
  bio      String?
  image    String?
  articles Article[]
  comments Comment[]
  favorites Favorite[]
  
  // Following relationships
  following Follow[] @relation("UserFollowing")
  followers Follow[] @relation("UserFollowers")
}

model Article {
  id          Int       @id @default(autoincrement())
  title       String
  description String
  body        String
  slug        String    @unique
  tagList     String[]
  authorId    Int
  author      User      @relation(fields: [authorId], references: [id])
  comments    Comment[]
  favorites   Favorite[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @default(now()) @updatedAt
}

model Comment {
  id        Int    @id @default(autoincrement())
  body      String
  article   Article @relation(fields: [articleId], references: [id])
  articleId Int
  author    User    @relation(fields: [authorId], references: [id])
  authorId  Int
  createdAt DateTime @default(now())       
  updatedAt DateTime @updatedAt
}

model Follow {
  id          Int      @id @default(autoincrement())
  followerId  Int
  followingId Int
  createdAt   DateTime @default(now())
  
  follower  User @relation("UserFollowing", fields: [followerId], references: [id], onDelete: Cascade)
  following User @relation("UserFollowers", fields: [followingId], references: [id], onDelete: Cascade)
  
  @@unique([followerId, followingId])
}

model Favorite {
  id        Int      @id @default(autoincrement())
  userId    Int
  articleId Int
  createdAt DateTime @default(now())
  
  user    User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  article Article @relation(fields: [articleId], references: [id], onDelete: Cascade)
  
  @@unique([userId, articleId])
}

model Tag {
  id   Int    @id @default(autoincrement())
  name String @unique
}
